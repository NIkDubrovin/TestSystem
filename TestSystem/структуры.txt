Как объявляется структура в C++?
a. struct MyStruct;
b. MyStruct;
c. class MyStruct;
d. typedef MyStruct;

Какое ключевое слово используется для определения структуры в C++?
a. struct
b. class
c. union
d. typedef

Как объявить переменную типа структуры?
a. struct MyStruct var;
b. MyStruct var;
c. class MyStruct var;
d. typedef MyStruct var;

Как объявить переменную типа указатель на структуру?
a. struct MyStruct *ptr;
b. MyStruct *ptr;
c. class MyStruct *ptr;
d. typedef MyStruct *ptr;

Как обратиться к члену структуры?
a. struct_var.chen;
b. struct_var->chen;
c. struct_var::chen;
d. struct_var[chen];

Как добавить новый член в структуру?
a. Изменить определение структуры.
b. Использовать ключевое слово "add".
c. Использовать оператор "dot" и добавить новый член в определении структуры.
d. Использовать оператор "arrow" и добавить новый член в определении структуры.

Как определить размер структуры в байтах?
a. sizeof(MyStruct);
b. sizeof(struct MyStruct);
c. sizeof(MyStruct *);
d. sizeof(struct MyStruct *);

Может ли структура содержать указатель на саму себя?
a. Да
b. Нет
c. Только в Windows
d. Только в Linux

Может ли структура содержать члены разных типов?
a. Да
b. Нет
c. Только в Windows
d. Только в Linux

Может ли структура наследоваться от другой структуры?
a. Да
b. Нет
c. Только в Windows
d. Только в Linux

Как передать структуру в функцию?
a. Передать как аргумент по значению.
b. Передать как аргумент по ссылке.
c. Передать как аргумент по указателю.
d. Все вышеперечисленное.

Как вернуть структуру из функции?
a. Вернуть по значению.
b. Вернуть по ссылке.
c. Вернуть по указателю.
d. Все вышеперечисленное.

Как проинициализировать члены структуры при объявлении?
a. Использовать оператор присваивания.
b. Использовать конструктор.
c. Использовать оператор инициализации.
d. Нельзя проинициализировать при объявлении.

Как скопировать одну структуру в другую?
a. Использовать оператор присваивания.
b. Использовать конструктор копирования.
c. Использовать функцию memcpy().
d. Все вышеперечисленное.

Как проверить, равны ли две структуры?
a. Использовать оператор сравнения "=="
b. Сравнивать каждый член структуры отдельно.
c. Использовать функцию memcmp().
d. Все вышеперечисленное.

Как удалить структуру?
a. Вызвать деструктор.
b. Использовать оператор delete.
c. Использовать оператор free().
d. Нельзя удалить структуру.

Как определить структуру внутри класса?
a. Определить структуру как public член класса.
b. Определить структуру как private член класса.
c. Определить структуру как protected член класса.
d. Нельзя определить структуру внутри класса.

Как объявить структуру в заголовочном файле?
a. Определить структуру в заголовочном файле и использовать директиву #include.
b. Определить структуру в исходном файле и использовать директиву #include.
c. Использовать директиву #define для определения структуры.
d. Нельзя объявить структуру в заголовочном файле.

Может ли структура содержать функции-члены?
a. Да
b. Нет
c. Только в Windows
d. Только в Linux

Что такое вложенная структура?
a. Структура, объявленная внутри другой структуры.
b. Структура, содержащая указатель на другую структуру.
c. Структура, наследующая от другой структуры.
d. Структура, содержащая члены разных типов.

Как объявить вложенную структуру?
a. struct OuterStruct { struct InnerStruct { int x; }; };
b. struct InnerStruct { int x; }; struct OuterStruct { InnerStruct inner; };
c. struct InnerStruct { int x; }; struct OuterStruct { InnerStruct *inner; };
d. struct InnerStruct { int x; }; struct OuterStruct { InnerStruct inner; } outer;

Как обратиться к члену вложенной структуры?
a. outer.inner.x;
b. outer->inner->x;
c. outer::inner::x;
d. outer.inner[x];

Как проинициализировать вложенную структуру при объявлении?
a. struct OuterStruct { InnerStruct inner = {10}; }; struct InnerStruct { int x; };
b. struct InnerStruct { int x; }; struct OuterStruct { InnerStruct inner; inner.x= 10; };
c. struct InnerStruct { int x; }; struct OuterStruct { InnerStruct inner = {10}; };
d. struct OuterStruct { InnerStruct inner; }; struct InnerStruct { int x = 10; };

Какой будет размер структуры, содержащей следующие члены: int, char, double, float, short?
a. 20
b. 22
c. 24
d. 26

Как можно изменить размер структуры в C++?
a. Изменить размер членов структуры.
b. Изменить выравнивание структуры.
c. Использовать директиву pragma pack.
d. Нельзя изменить размер структуры.

Что такое выравнивание структуры?
a. Процесс выравнивания структуры в памяти.
b. Способ задания размера структуры.
c. Способ объединения нескольких структур.
d. Необходимость расположения структур в памяти по убыванию размеров.

Какова особенность выравнивания структуры в памяти?
a. Все члены структуры занимают одинаковый объем памяти.
b. Члены структуры могут занимать разное количество памяти.
c. Члены структуры могут располагаться в памяти в любом порядке.
d. Структуры всегда выравниваются по размеру int.

Как изменить выравнивание структуры в C++?
a. Изменить размер членов структуры.
b. Использовать директиву pragma pack.
c. Изменить порядок расположения членов структуры.
d. Нельзя изменить выравнивание структуры.

Какое значение по умолчанию у выравнивания структуры в C++?
a. 1
b. 2
c. 4
d. 8

Как определить размер выравнивания структуры в C++?
a. С помощью функции sizeof().
b. С помощью функции alignof().
c. С помощью функции offsetof().
d. С помощью функции memalign().

b
d
d
b
a
d
b
c
a
c
d
a
b
d
c
d
b
a
a
a
b
a
a
c
c
a
b
b
c
b